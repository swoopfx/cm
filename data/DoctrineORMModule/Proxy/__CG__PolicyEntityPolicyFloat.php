<?php

namespace DoctrineORMModule\Proxy\__CG__\Policy\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PolicyFloat extends \Policy\Entity\PolicyFloat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'id', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'serviceType', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'specificService', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'objects', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'createdOn', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'updatedOn', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'coverNote', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'policyFloatUid'];
        }

        return ['__isInitialized__', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'id', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'serviceType', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'specificService', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'objects', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'createdOn', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'updatedOn', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'coverNote', '' . "\0" . 'Policy\\Entity\\PolicyFloat' . "\0" . 'policyFloatUid'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PolicyFloat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceType', []);

        return parent::getServiceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceType', [$type]);

        return parent::setServiceType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecificService()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecificService', []);

        return parent::getSpecificService();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecificService($spec)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecificService', [$spec]);

        return parent::setSpecificService($spec);
    }

    /**
     * {@inheritDoc}
     */
    public function getObjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjects', []);

        return parent::getObjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addObjects($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addObjects', [$object]);

        return parent::addObjects($object);
    }

    /**
     * {@inheritDoc}
     */
    public function removeObjects($object)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeObjects', [$object]);

        return parent::removeObjects($object);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer($cus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$cus]);

        return parent::setCustomer($cus);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', []);

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', [$date]);

        return parent::setCreatedOn($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedOn', []);

        return parent::getUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedOn($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedOn', [$date]);

        return parent::setUpdatedOn($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverNote', []);

        return parent::getCoverNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverNote($note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverNote', [$note]);

        return parent::setCoverNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getPolicyFloatUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPolicyFloatUid', []);

        return parent::getPolicyFloatUid();
    }

    /**
     * {@inheritDoc}
     */
    public function setPolicyFloatUid($uid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPolicyFloatUid', [$uid]);

        return parent::setPolicyFloatUid($uid);
    }

}
