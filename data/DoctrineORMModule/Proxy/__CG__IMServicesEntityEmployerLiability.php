<?php

namespace DoctrineORMModule\Proxy\__CG__\IMServices\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EmployerLiability extends \IMServices\Entity\EmployerLiability implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'id', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'desc', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isTakenInOtherCountries', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'otherCountryDetails', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isPremiseLawful', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'coverFromDate', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'coverToDate', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'employeeDetails', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isLawsNRegulation', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'lawsNRegulation', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isSawNMachine', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'sawNMachine', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isBoilersNpressureLifts', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'specialWork', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isLawAbiding', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isFencedProperly', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isBoilers', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isRadioActiveProducts', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isAcidAndGasses', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isAbestos', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isPreviousInsure', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'previousInsure', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'previousClaims'];
        }

        return ['__isInitialized__', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'id', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'desc', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isTakenInOtherCountries', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'otherCountryDetails', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isPremiseLawful', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'coverFromDate', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'coverToDate', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'employeeDetails', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isLawsNRegulation', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'lawsNRegulation', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isSawNMachine', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'sawNMachine', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isBoilersNpressureLifts', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'specialWork', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isLawAbiding', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isFencedProperly', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isBoilers', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isRadioActiveProducts', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isAcidAndGasses', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isAbestos', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'isPreviousInsure', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'previousInsure', '' . "\0" . 'IMServices\\Entity\\EmployerLiability' . "\0" . 'previousClaims'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EmployerLiability $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getProfession()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfession', []);

        return parent::getProfession();
    }

    /**
     * {@inheritDoc}
     */
    public function getDesc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesc', []);

        return parent::getDesc();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesc($desc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesc', [$desc]);

        return parent::setDesc($desc);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsTakenInOtherCountries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsTakenInOtherCountries', []);

        return parent::getIsTakenInOtherCountries();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsTakenInOtherCountries($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsTakenInOtherCountries', [$set]);

        return parent::setIsTakenInOtherCountries($set);
    }

    /**
     * {@inheritDoc}
     */
    public function setProfession($prof)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfession', [$prof]);

        return parent::setProfession($prof);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherCountryDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherCountryDetails', []);

        return parent::getOtherCountryDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtherCountryDetails($det)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtherCountryDetails', [$det]);

        return parent::setOtherCountryDetails($det);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverFromDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverFromDate', []);

        return parent::getCoverFromDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverFromDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverFromDate', [$date]);

        return parent::setCoverFromDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverToDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverToDate', []);

        return parent::getCoverToDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverToDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverToDate', [$date]);

        return parent::setCoverToDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployeeDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployeeDetails', []);

        return parent::getEmployeeDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmployeeDetails($emp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmployeeDetails', [$emp]);

        return parent::addEmployeeDetails($emp);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmployeeDetails($emp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmployeeDetails', [$emp]);

        return parent::removeEmployeeDetails($emp);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsLawsNRegulation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsLawsNRegulation', []);

        return parent::getIsLawsNRegulation();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsLawsNRegulation($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsLawsNRegulation', [$set]);

        return parent::setIsLawsNRegulation($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getLawsNRegulation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLawsNRegulation', []);

        return parent::getLawsNRegulation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLawsNRegulation($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLawsNRegulation', [$set]);

        return parent::setLawsNRegulation($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSawNMachine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSawNMachine', []);

        return parent::getIsSawNMachine();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSawNMachine($mach)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSawNMachine', [$mach]);

        return parent::setIsSawNMachine($mach);
    }

    /**
     * {@inheritDoc}
     */
    public function getSawNMachine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSawNMachine', []);

        return parent::getSawNMachine();
    }

    /**
     * {@inheritDoc}
     */
    public function setSawNMachine($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSawNMachine', [$set]);

        return parent::setSawNMachine($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsBoilersNpressureLifts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsBoilersNpressureLifts', []);

        return parent::getIsBoilersNpressureLifts();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsBoilersNpressureLifts($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsBoilersNpressureLifts', [$set]);

        return parent::setIsBoilersNpressureLifts($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecialWork()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecialWork', []);

        return parent::getSpecialWork();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpecialWork($work)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpecialWork', [$work]);

        return parent::setSpecialWork($work);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsLawAbiding()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsLawAbiding', []);

        return parent::getIsLawAbiding();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsLawAbiding($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsLawAbiding', [$set]);

        return parent::setIsLawAbiding($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsFencedProperly()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsFencedProperly', []);

        return parent::getIsFencedProperly();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsFencedProperly($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsFencedProperly', [$set]);

        return parent::setIsFencedProperly($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPreviousInsurer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPreviousInsurer', []);

        return parent::getIsPreviousInsurer();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPreviousInsure($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPreviousInsure', [$set]);

        return parent::setIsPreviousInsure($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviousInsurer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviousInsurer', []);

        return parent::getPreviousInsurer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviousInsure($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviousInsure', [$set]);

        return parent::setPreviousInsure($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviousClaims()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviousClaims', []);

        return parent::getPreviousClaims();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDeclaration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDeclaration', []);

        return parent::getIsDeclaration();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDeclaration($set)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDeclaration', [$set]);

        return parent::setIsDeclaration($set);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPremiseLawful()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPremiseLawful', []);

        return parent::getIsPremiseLawful();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPremiseLawful($isPremiseLawful)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPremiseLawful', [$isPremiseLawful]);

        return parent::setIsPremiseLawful($isPremiseLawful);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsBoilers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsBoilers', []);

        return parent::getIsBoilers();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsBoilers($isBoilers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsBoilers', [$isBoilers]);

        return parent::setIsBoilers($isBoilers);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsRadioActiveProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsRadioActiveProducts', []);

        return parent::getIsRadioActiveProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsRadioActiveProducts($isRadioActiveProducts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsRadioActiveProducts', [$isRadioActiveProducts]);

        return parent::setIsRadioActiveProducts($isRadioActiveProducts);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAcidAndGasses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAcidAndGasses', []);

        return parent::getIsAcidAndGasses();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAcidAndGasses($isAcidAndGasses)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAcidAndGasses', [$isAcidAndGasses]);

        return parent::setIsAcidAndGasses($isAcidAndGasses);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAbestos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAbestos', []);

        return parent::getIsAbestos();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAbestos($isAbestos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAbestos', [$isAbestos]);

        return parent::setIsAbestos($isAbestos);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPreviousInsure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPreviousInsure', []);

        return parent::getIsPreviousInsure();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviousInsure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviousInsure', []);

        return parent::getPreviousInsure();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviousClaims($previousClaims)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviousClaims', [$previousClaims]);

        return parent::setPreviousClaims($previousClaims);
    }

}
