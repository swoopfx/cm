<?php

namespace DoctrineORMModule\Proxy\__CG__\IMServices\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MarineCargo extends \IMServices\Entity\MarineCargo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'id', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'cargoNature', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'otherVesselType', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'experienceYears', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'packagingType', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'othersPackage', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'transitMode', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'coverType', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'cargoValue', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'currency', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'maxSumInsured', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'expectedPremium', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'voyageFrom', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'voyageTo', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'typeOfVessel', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'nameOfVessel', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'isContainized', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'isPreviousDecline', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'declineReason', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'createdOn', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'isDeclaration'];
        }

        return ['__isInitialized__', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'id', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'cargoNature', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'otherVesselType', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'experienceYears', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'packagingType', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'othersPackage', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'transitMode', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'coverType', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'cargoValue', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'currency', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'maxSumInsured', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'expectedPremium', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'voyageFrom', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'voyageTo', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'typeOfVessel', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'nameOfVessel', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'isContainized', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'isPreviousDecline', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'declineReason', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'createdOn', '' . "\0" . 'IMServices\\Entity\\MarineCargo' . "\0" . 'isDeclaration'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MarineCargo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCargoNature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCargoNature', []);

        return parent::getCargoNature();
    }

    /**
     * {@inheritDoc}
     */
    public function setCargoNature($natur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCargoNature', [$natur]);

        return parent::setCargoNature($natur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCargoValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCargoValue', []);

        return parent::getCargoValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCargoValue($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCargoValue', [$value]);

        return parent::setCargoValue($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObject', []);

        return parent::getObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setObject($obj)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObject', [$obj]);

        return parent::setObject($obj);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperienceYears()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperienceYears', []);

        return parent::getExperienceYears();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperienceYears($years)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperienceYears', [$years]);

        return parent::setExperienceYears($years);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackagingType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackagingType', []);

        return parent::getPackagingType();
    }

    /**
     * {@inheritDoc}
     */
    public function getOthersPackag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOthersPackag', []);

        return parent::getOthersPackag();
    }

    /**
     * {@inheritDoc}
     */
    public function setOthersPackag($pak)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOthersPackag', [$pak]);

        return parent::setOthersPackag($pak);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransitMode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransitMode', []);

        return parent::getTransitMode();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransitMode($mode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransitMode', [$mode]);

        return parent::setTransitMode($mode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverType', []);

        return parent::getCoverType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverType', [$type]);

        return parent::setCoverType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxSumInsured()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxSumInsured', []);

        return parent::getMaxSumInsured();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxSumInsured($max)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxSumInsured', [$max]);

        return parent::setMaxSumInsured($max);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpectedPremium()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpectedPremium', []);

        return parent::getExpectedPremium();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpectedPremium($val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpectedPremium', [$val]);

        return parent::setExpectedPremium($val);
    }

    /**
     * {@inheritDoc}
     */
    public function getVoyageFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVoyageFrom', []);

        return parent::getVoyageFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setVoyageFrom($from)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVoyageFrom', [$from]);

        return parent::setVoyageFrom($from);
    }

    /**
     * {@inheritDoc}
     */
    public function getVoyageTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVoyageTo', []);

        return parent::getVoyageTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setVoyageTo($to)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVoyageTo', [$to]);

        return parent::setVoyageTo($to);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPreviousDecline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPreviousDecline', []);

        return parent::getIsPreviousDecline();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPreviousDecline($bool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPreviousDecline', [$bool]);

        return parent::setIsPreviousDecline($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeclineReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeclineReason', []);

        return parent::getDeclineReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeclineReason($rea)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeclineReason', [$rea]);

        return parent::setDeclineReason($rea);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffer', []);

        return parent::getOffer();
    }

    /**
     * {@inheritDoc}
     */
    public function addOffer($offer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOffer', [$offer]);

        return parent::addOffer($offer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOffer($offer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOffer', [$offer]);

        return parent::removeOffer($offer);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposal', []);

        return parent::getProposal();
    }

    /**
     * {@inheritDoc}
     */
    public function addProposal($proposal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProposal', [$proposal]);

        return parent::addProposal($proposal);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProposal($proposal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProposal', [$proposal]);

        return parent::removeProposal($proposal);
    }

    /**
     * {@inheritDoc}
     */
    public function getFloatingPolicy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFloatingPolicy', []);

        return parent::getFloatingPolicy();
    }

    /**
     * {@inheritDoc}
     */
    public function addFloatingPolicy($policy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFloatingPolicy', [$policy]);

        return parent::addFloatingPolicy($policy);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFloatingPolicy($policy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFloatingPolicy', [$policy]);

        return parent::removeFloatingPolicy($policy);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackage', []);

        return parent::getPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function addPackage($pack)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPackage', [$pack]);

        return parent::addPackage($pack);
    }

    /**
     * {@inheritDoc}
     */
    public function removePackage($pack)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePackage', [$pack]);

        return parent::removePackage($pack);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', []);

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', [$date]);

        return parent::setCreatedOn($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDeclaration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDeclaration', []);

        return parent::getIsDeclaration();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDeclaration($dec)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDeclaration', [$dec]);

        return parent::setIsDeclaration($dec);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtherVesselType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtherVesselType', []);

        return parent::getOtherVesselType();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtherVesselType($otherVesselType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtherVesselType', [$otherVesselType]);

        return parent::setOtherVesselType($otherVesselType);
    }

    /**
     * {@inheritDoc}
     */
    public function getOthersPackage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOthersPackage', []);

        return parent::getOthersPackage();
    }

    /**
     * {@inheritDoc}
     */
    public function setOthersPackage($othersPackage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOthersPackage', [$othersPackage]);

        return parent::setOthersPackage($othersPackage);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeOfVessel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeOfVessel', []);

        return parent::getTypeOfVessel();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeOfVessel($typeOfVessel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeOfVessel', [$typeOfVessel]);

        return parent::setTypeOfVessel($typeOfVessel);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameOfVessel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameOfVessel', []);

        return parent::getNameOfVessel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameOfVessel($nameOfVessel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameOfVessel', [$nameOfVessel]);

        return parent::setNameOfVessel($nameOfVessel);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsContainized()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsContainized', []);

        return parent::getIsContainized();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsContainized($isContainized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsContainized', [$isContainized]);

        return parent::setIsContainized($isContainized);
    }

    /**
     * {@inheritDoc}
     */
    public function setPackagingType($packagingType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackagingType', [$packagingType]);

        return parent::setPackagingType($packagingType);
    }

}
