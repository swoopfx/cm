<?php

namespace DoctrineORMModule\Proxy\__CG__\Transactions\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Invoice extends \Transactions\Entity\Invoice implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'id', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'customer', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'generatedOn', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'amount', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'invoiceCategory', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'transaction', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'invoiceUid', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'status', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'currency', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'modifiedOn', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'isOpen', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'broker', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'expiryDate', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'invoiceUser', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'user', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'coverNote', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'packages', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'offer', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'proposal', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'policyFloat', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'manualProcess', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'isMicro'];
        }

        return ['__isInitialized__', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'id', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'customer', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'generatedOn', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'amount', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'invoiceCategory', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'transaction', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'invoiceUid', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'status', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'currency', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'modifiedOn', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'isOpen', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'broker', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'expiryDate', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'invoiceUser', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'user', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'coverNote', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'packages', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'offer', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'proposal', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'policyFloat', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'manualProcess', '' . "\0" . 'Transactions\\Entity\\Invoice' . "\0" . 'isMicro'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Invoice $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setBeingFor($beingFor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBeingFor', [$beingFor]);

        return parent::setBeingFor($beingFor);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer($cus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$cus]);

        return parent::setCustomer($cus);
    }

    /**
     * {@inheritDoc}
     */
    public function getBeingFor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBeingFor', []);

        return parent::getBeingFor();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeneratedOn($generatedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeneratedOn', [$generatedOn]);

        return parent::setGeneratedOn($generatedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeneratedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeneratedOn', []);

        return parent::getGeneratedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amountPayed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', [$amountPayed]);

        return parent::setAmount($amountPayed);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmountDue($amountDue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmountDue', [$amountDue]);

        return parent::setAmountDue($amountDue);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmountDue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmountDue', []);

        return parent::getAmountDue();
    }

    /**
     * {@inheritDoc}
     */
    public function setBalance($balance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBalance', [$balance]);

        return parent::setBalance($balance);
    }

    /**
     * {@inheritDoc}
     */
    public function getBalance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalance', []);

        return parent::getBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function addTransaction(\Transactions\Entity\Transaction $trans)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTransaction', [$trans]);

        return parent::addTransaction($trans);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTransaction(\Transactions\Entity\Transaction $trans)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTransaction', [$trans]);

        return parent::removeTransaction($trans);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransaction', []);

        return parent::getTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(\Transactions\Entity\InvoiceStatus $status = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvoiceUid($uid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvoiceUid', [$uid]);

        return parent::setInvoiceUid($uid);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoiceUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoiceUid', []);

        return parent::getInvoiceUid();
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoiceCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoiceCategory', []);

        return parent::getInvoiceCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvoiceCategory($cat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvoiceCategory', [$cat]);

        return parent::setInvoiceCategory($cat);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($cur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$cur]);

        return parent::setCurrency($cur);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedOn', []);

        return parent::getModifiedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedOn($mod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedOn', [$mod]);

        return parent::setModifiedOn($mod);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsOpen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsOpen', []);

        return parent::getIsOpen();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsOpen($bool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsOpen', [$bool]);

        return parent::setIsOpen($bool);
    }

    /**
     * {@inheritDoc}
     */
    public function setBroker($brk)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBroker', [$brk]);

        return parent::setBroker($brk);
    }

    /**
     * {@inheritDoc}
     */
    public function getBroker()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBroker', []);

        return parent::getBroker();
    }

    /**
     * {@inheritDoc}
     */
    public function getBrokerCustomerInvoice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrokerCustomerInvoice', []);

        return parent::getBrokerCustomerInvoice();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrokerCustomerInvoice($bci)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrokerCustomerInvoice', [$bci]);

        return parent::setBrokerCustomerInvoice($bci);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvoiceUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvoiceUser', []);

        return parent::getInvoiceUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiryDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiryDate', [$date]);

        return parent::setExpiryDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiryDate', []);

        return parent::getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverNote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverNote', []);

        return parent::getCoverNote();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverNote($note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverNote', [$note]);

        return parent::setCoverNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffer', []);

        return parent::getOffer();
    }

    /**
     * {@inheritDoc}
     */
    public function setOffer($off)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOffer', [$off]);

        return parent::setOffer($off);
    }

    /**
     * {@inheritDoc}
     */
    public function getPolicyFloat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPolicyFloat', []);

        return parent::getPolicyFloat();
    }

    /**
     * {@inheritDoc}
     */
    public function setPolicyFloat($float)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPolicyFloat', [$float]);

        return parent::setPolicyFloat($float);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposal', []);

        return parent::getProposal();
    }

    /**
     * {@inheritDoc}
     */
    public function setProposal($prop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProposal', [$prop]);

        return parent::setProposal($prop);
    }

    /**
     * {@inheritDoc}
     */
    public function setPackages($pac)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackages', [$pac]);

        return parent::setPackages($pac);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackages', []);

        return parent::getPackages();
    }

    /**
     * {@inheritDoc}
     */
    public function getManualProcess()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManualProcess', []);

        return parent::getManualProcess();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsMicro($micro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsMicro', [$micro]);

        return parent::setIsMicro($micro);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsMicro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsMicro', []);

        return parent::getIsMicro();
    }

    /**
     * {@inheritDoc}
     */
    public function getMicroPayment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMicroPayment', []);

        return parent::getMicroPayment();
    }

    /**
     * {@inheritDoc}
     */
    public function addMicroPayment($micro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMicroPayment', [$micro]);

        return parent::addMicroPayment($micro);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMicroPayment($micro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMicroPayment', [$micro]);

        return parent::removeMicroPayment($micro);
    }

}
